#!/usr/bin/octave -qf
# For m = matrix of size [N,M] remove m(1,k) for all -c [k1,k2,...]
#
#=====================================
# ex: set filetype=octave:
#=====================================

#==================================================
# SET OPTIONAL COMMAND-LINE ARGUMENTS
#==================================================
global OPT_VAR_NAMES = {"cols" "output_format"}; 
global OPT_VAR_FLAGS = {"c" "f"};
global OPT_VAR_DEFAULTS = {"[]" "'%8.8f\t'"};
global OPT_FLAG_HASARGS = {"c" "f"}; 

parse_opts

dummy_file = ".read.stdin";

if (length(OPTFILES) == 0)
	OPTFILES={".read.stdin"};
end

for k = 1 : length(OPTFILES)
	fin = OPTFILES{k};
	if strcmp(fin,dummy_file)
		out = read_mat_stdin();
	else
		out = load(fin);
	end
	[n,m] = size(out);

	# check if cols is contained in [1:m]
	ncols = numel(cols);
	colspan = [1:m];
	if !ncols || !(numel(intersect(cols,colspan)) == ncols)
		cols = colspan;
		ncols = numel(cols);
	end

	for j = cols
		out(:,j) = out(:,j) - out(1,j);
	end

	% print to stdout
	output_str = [repmat(output_format,1,length(out(1,:)))];
	fprintf(1, [output_str(1:end-1) "\n"],out');

end
