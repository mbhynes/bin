#!/usr/bin/octave -q
#
# interp - wrapper to yi = interp1 (x, y, xi, method) 
#
# =================================================
# Author: Michael B Hynes, mbhynes@uwaterloo.ca
# License: GPL 3
# Creation Date: Mon Jan 26 12:30:50 2015
# Last Modified: Fri 17 Apr 2015 05:28:04 PM EDT
# =================================================

global OPT_VAR_NAMES = {"npoints" "method" "xvals" "cols" "output_format" "display_help"}; 
global OPT_VAR_FLAGS = {"n" "m" "x" "c" "f" "h"};
global OPT_VAR_DEFAULTS = {"0" "'cubic'" "[]" "[]" "'%8.8f\t'" "false"};
global OPT_FLAG_HASARGS = {"n" "m" "x" "c" "f"}; 

global OPTFLAGS;
global OPTARGS;
global OPTFILES;

parse_opts

if help_flag_specified()
	display_opts()
	exit
end

if (length(OPTFILES) == 0)
	OPTFILES={STDIN};
end

% check if npoints was specified
np = length(xvals);
if np 
	npoints = np;
end

if ~npoints
	npoints = 100;
end

for k = 1 : length(OPTFILES)
	fin = OPTFILES{k};
	
	if strcmp(fin,STDIN)
		mat = read_mat_stdin();
	else
		mat = dlmread(fin);
	end

	[nrows ncols] = size(mat); 

	# use column 1 as the ordinates if ncols > 1
	if (ncols == 1)
		x = [1:nrows]';
	else
		x = mat(:,1);
	end

	if isempty(xvals)
		these_xvals = linspace(x(1),x(end),npoints)';
	else
		these_xvals = make_col_vec(xvals);
	end
	
	if isempty(cols)
		cols = [1:ncols];
	end

	yvals = [these_xvals nan(npoints,length(cols))];
	k = 2;
	for c = cols
		yvals(:,k) = interp1(x,mat(:,c),these_xvals,method,'extrap')';
		k++;
	end

	output_str = [repmat(output_format,1,length(cols)+1)];
	fprintf(1, [output_str(1:end-1) "\n"], yvals');
end
