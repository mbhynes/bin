#!/usr/bin/octave -qf
# sum matrix in many OPTFILES
#
#=====================================
# ex: set filetype=octave:
#=====================================

#==================================================
# SET OPTIONAL COMMAND-LINE ARGUMENTS
#==================================================
global OPT_VAR_NAMES = {"cols" "output_format" "avg_flag"}; 
global OPT_VAR_FLAGS = {"c" "f" "m"};
global OPT_VAR_DEFAULTS = {"[]" "'%8.8f\t'" "[]"};
global OPT_FLAG_HASARGS = {"c" "f"}; 

parse_opts 

dummy_file = ".read.stdin";

if (length(OPTFILES) == 0)
	OPTFILES={".read.stdin"};
end

result = 0;

for k = 1 : length(OPTFILES)
	fin = OPTFILES{k};
	fprintf(stderr,"Reading %s\n",fin)
	if strcmp(fin,dummy_file)
		out = read_stdin();
	else
		out = load(fin);
	end

	if (k > 1)
		[n,nc_out] = size(out);
		[nrows,nc_res] = size(result);

		delta = abs(n - nrows);

		% shrink to smallest
		if (n > nrows);
			out = out(1:nrows,:);
		elseif (nrows > n)
			result = result(1:n,:);
		end

		% for increasing size
		% if (n > nrows);
		% 	result = [result; zeros(delta,nc_res)];
		% elseif (nrows > n)
		% 	out = [out; zeros(delta,nc_out)];
		% end
	end

	if cols
		result += out(:,cols);
	else
		result += out;
	end
end

if avg_flag
	result /= length(OPTFILES);
end

output_str = [repmat(output_format,1,length(result(1,:)))];
fprintf(1, [output_str(1:end-1) "\n"],result');
